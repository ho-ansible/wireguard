# {{ ansible_managed }}
# Firewall rules for wireguard VPN {{ wg_name }}

{#- Accumulate list of firewall rules #}
{% set spec_list = [] %}
{% for peer in q('inventory_hostnames', wg_peers) | sort
  if peer != inventory_hostname and hostvars[peer].wg_pubkey is defined %}
{%   set hv = hostvars[peer] %}
{%   set spec_list = spec_list.append((hv.wg_ext_ip | d('', true), hv.wg_port )) %}
{% endfor %}

{#- Macros #}
{% set ipt = '/usr/sbin/iptables' %}
{% set ch = 'in_' ~ wg_name %}
{% set in_rule = '-p udp --dport ' ~ wg_port ~ ' -j ' ~ ch %}

[Service]
# Prepare iptables chain {{ ch }}: create, flush, ref from INPUT
ExecStartPre=!-{{ ipt }} -N {{ ch }}
ExecStartPre=!{{ ipt }} -F {{ ch }}
ExecStartPre=!-{{ ipt }} -D INPUT {{ in_rule }}
ExecStartPre=!{{ ipt }} -A INPUT {{ in_rule }}

# Populate chain {{ ch }}
{% if '' in spec_list | map('first') %}
ExecStartPre=!{{ ipt }} -A {{ ch }} -j ACCEPT
{% else %}
{%   for ip, port in spec_list | unique %}
ExecStartPre=!{{ ipt }} -A {{ ch }} -s {{ ip }} -p udp --sport {{ port }} -j ACCEPT
{%   endfor %}
{% endif %}

# Cleanup: unref, flush, delete
ExecStopPost=!-{{ ipt }} -D INPUT {{ in_rule }}
ExecStopPost=!-{{ ipt }} -F {{ ch }}
ExecStopPost=!-{{ ipt }} -X {{ ch }}

{# Additional custom rules #}
{% for rule in wg_extra_iptables %}
ExecStartPre=!-{{ ipt }} -A {{ rule }}
ExecStopPost=!-{{ ipt }} -D {{ rule }}
{% endfor %}
