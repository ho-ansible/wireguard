# {{ ansible_managed }}
[Unit]
Description=Firewall rules for wireguard
BindsTo=systemd-networkd.service
After=systemd-networkd.service

[Service]
Type=oneshot
RemainAfterExit=yes
{# Accumulate list of firewall rules #}
{% set spec_list = [] %}
{% for peer in q('inventory_hostnames', wg_peers) | sort
  if peer != inventory_hostname and hostvars[peer].wg_pubkey is defined %}
{%   set hv = hostvars[peer] %}
{%   set peer_port = hv.wg_port | d(wg_default_port, true) %}
{%   if hv.wg_ext_ip | d() %}
{%     set peer_ip = hv.wg_ext_ip | ipaddr('address') %}
{%     if hv.ansible_default_ipv4 is defined %}
{%       set peer_ip = peer_ip | d(hv.ansible_default_ipv4.address, true) %}
{%     endif %}
{%   endif %}
{%   set spec_list = spec_list.append((peer_ip | d(), peer_port)) %}
{% endfor %}
{# Deploy firewall rules #}
{% for ip, port in spec_list | unique %}
{%   set ip = '-s ' ~ ip if ip | length else '' %}
ExecStart=/usr/sbin/iptables -A INPUT {{ ip }} -p udp --dport {{ port }} -j ACCEPT
ExecStop= /usr/sbin/iptables -D INPUT {{ ip }} -p udp --dport {{ port }} -j ACCEPT
{% endfor %}

[Install]
WantedBy=network-online.target
